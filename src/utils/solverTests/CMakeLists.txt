# Configure modules path
SET ( MODULE_PATH "${${PROJECT_NAME}_SOURCE_DIR}/cmake" )
INCLUDE ( "${MODULE_PATH}/modules.cmake" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${SPEL_MODULE}" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}" )
IF ( GOOGLE_TEST AND GOOGLE_TEST_PATH )
  INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${GOOGLE_TEST_PATH}/include" )
ENDIF()

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}" )

INCLUDE_DIRECTORIES ( "${${PROJECT_NAME}_SOURCE_DIR}/utils/general" )

# general
LIST ( APPEND GENERAL_SRC ../general/projectLoader.cpp )
LIST ( APPEND GENERAL_HDR ../general/projectLoader.hpp )

# additional files
LIST ( APPEND ${TLPSSOLVERTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${TLPSSOLVERTEST_MODULE}_SRC tlpsSolverTest.cpp )

LIST ( APPEND ${TLPSSOLVERTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${TLPSSOLVERTEST_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${TLPSSOLVERTEST_MODULE}_LNK ${HDF5_LIBRARIES} )

LIST ( APPEND ${NSKPSOLVERTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${NSKPSOLVERTEST_MODULE}_SRC nskpSolverTest.cpp )

LIST ( APPEND ${NSKPSOLVERTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${NSKPSOLVERTEST_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${NSKPSOLVERTEST_MODULE}_LNK ${HDF5_LIBRARIES} )

LIST ( APPEND ${HYBRIDSOLVERTEST_MODULE}_SRC ${${PROJECT_NAME}_SOURCE_DIR}/${TINYXML2_PATH}/tinyxml2.cpp )
LIST ( APPEND ${HYBRIDSOLVERTEST_MODULE}_SRC hybridSolverTest.cpp )

LIST ( APPEND ${HYBRIDSOLVERTEST_MODULE}_LNK ${SPEL_MODULE} )
LIST ( APPEND ${HYBRIDSOLVERTEST_MODULE}_LNK ${OpenCV_LIBS} )
LIST ( APPEND ${HYBRIDSOLVERTEST_MODULE}_LNK ${HDF5_LIBRARIES} )

ADD_EXECUTABLE ( ${TLPSSOLVERTEST_MODULE} ${${TLPSSOLVERTEST_MODULE}_SRC} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${NSKPSOLVERTEST_MODULE} ${${NSKPSOLVERTEST_MODULE}_SRC} ${GENERAL_SRC} ${GENERAL_HDR} )
ADD_EXECUTABLE ( ${HYBRIDSOLVERTEST_MODULE} ${${HYBRIDSOLVERTEST_MODULE}_SRC} ${GENERAL_SRC} ${GENERAL_HDR} )

# TODO: Library names should be taken from variables
TARGET_LINK_LIBRARIES ( ${TLPSSOLVERTEST_MODULE} ${${TLPSSOLVERTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${NSKPSOLVERTEST_MODULE} ${${NSKPSOLVERTEST_MODULE}_LNK} )
TARGET_LINK_LIBRARIES ( ${HYBRIDSOLVERTEST_MODULE} ${${HYBRIDSOLVERTEST_MODULE}_LNK} )


# Installation instructions for the test module
# Please specify the installation instructions sprcific
# To the architecture the project is being built for.

IF ( UNIX )
	INSTALL (
		TARGETS ${TLPSSOLVERTEST_MODULE} ${NSKPSOLVERTEST_MODULE} ${HYBRIDSOLVERTEST_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/${PROJECT_NAME}
		ARCHIVE DESTINATION lib/static/${PROJECT_NAME}
	)
ELSEIF ( WIN32 )
	INSTALL (
		TARGETS ${TLPSSOLVERTEST_MODULE} ${NSKPSOLVERTEST_MODULE} ${HYBRIDSOLVERTEST_MODULE}
		RUNTIME DESTINATION bin/
		LIBRARY DESTINATION lib/
		ARCHIVE DESTINATION lib/static/
	)
ENDIF()

